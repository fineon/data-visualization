[{"C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\index.js":"1","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\App.js":"2","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\reportWebVitals.js":"3","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\Header\\Header.jsx":"4","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\Dashboard\\Dashboard.jsx":"5","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\SignIn\\SignIn.jsx":"6","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\UserHomePage\\UserHomePage.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":649,"mtime":1611612763894,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2263,"mtime":1611653547503,"results":"12","hashOfConfig":"9"},{"size":14516,"mtime":1611651696273,"results":"13","hashOfConfig":"9"},{"size":2110,"mtime":1611617978051,"results":"14","hashOfConfig":"9"},{"size":5286,"mtime":1611545117363,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"bamtgr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\index.js",[],["34","35"],"C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\App.js",["36","37"],"import './App.css';\r\n\r\nimport Header from './Header/Header';\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport SignIn from './SignIn/SignIn';\r\nimport UserHomePage from './UserHomePage/UserHomePage';\r\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/' exact component={Dashboard} />\r\n        <Route path='/signin' render={(props) => <SignIn {...props}/>} />\r\n        <Route path='/dashboard/' render={(props) => <UserHomePage {...props}/>} />\r\n      </Switch>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\reportWebVitals.js",[],"C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\Header\\Header.jsx",[],"C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\Dashboard\\Dashboard.jsx",["38","39","40","41","42"],"C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\SignIn\\SignIn.jsx",["43"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/analytics\"\r\nimport * as firebaseui from 'firebaseui'\r\nimport 'firebaseui/dist/firebaseui.css'\r\nimport \"firebase/analytics\"\r\n\r\nimport './SignIn.scss'\r\n\r\nimport Header from './../Header/Header';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDYdM7vWZtPaUfEaxAtyezJKXW9CM5hgxE\",\r\n    authDomain: \"covid-user-sign-in.firebaseapp.com\",\r\n    projectId: \"covid-user-sign-in\",\r\n    storageBucket: \"covid-user-sign-in.appspot.com\",\r\n    messagingSenderId: \"224448347353\",\r\n    appId: \"1:224448347353:web:40604ad1606ad9e9fe92c8\",\r\n    measurementId: \"G-M38E2V56TT\"\r\n};\r\n\r\n\r\n\r\n// firebase.auth().createUserWithEmailAndPassword(email, password)\r\n//     .then((userCredential) => {\r\n//         // Signed in \r\n//         var user = userCredential.user;\r\n//         // ...\r\n//     })\r\n//     .catch((error) => {\r\n//         var errorCode = error.code;\r\n//         var errorMessage = error.message;\r\n//         // ..\r\n//     });\r\n\r\n\r\nexport default class SignIn extends Component {\r\n    state = {\r\n        data: {}\r\n    }\r\n    componentDidMount() {\r\n        //Error: An AuthUI instance already exists for the key \"[DEFAULT]\" after a re-render\r\n\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        } else {\r\n            firebase.app();\r\n        }\r\n\r\n\r\n        var ui = new firebaseui.auth.AuthUI(firebase.auth());\r\n\r\n        ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(firebase.auth());\r\n        ui.start('#firebaseui-container', {\r\n            signInOptions: [\r\n                firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n            ],\r\n            signInSuccessUrl: './dashboard/',\r\n            // Other config options...\r\n        });\r\n\r\n        \r\n\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n               <Header loggedIn=\"visitor\"/>\r\n\r\n                <div id=\"firebaseui-container\"></div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Vinh\\Desktop\\BrainStationWebDev\\Capstone project\\data-visualization\\src\\UserHomePage\\UserHomePage.jsx",["44","45"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Highcharts, { chart } from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Header from './../Header/Header';\r\n\r\nimport './UserHomePage.scss';\r\n\r\n\r\nlet allCountries = 'https://api.covid19api.com/summary';\r\nlet canada = 'https://api.covid19api.com/live/country/canada';\r\n\r\n\r\n\r\nexport default class Dashboard extends Component {\r\n    state = {\r\n        countries: {},\r\n        canada: [],\r\n        chartOptions: {\r\n            chart: {\r\n                type: 'pie'\r\n            },\r\n            title: {\r\n                text: 'Global COVID-19 Cases'\r\n            },\r\n            series: [{\r\n                name: 'cases',\r\n                colorByPoint: true,\r\n                data: [{\r\n                    name: 'Jane',\r\n                    y: 31\r\n                }, {\r\n                    name: 'John',\r\n                    y: 69\r\n                }]\r\n            }]\r\n        }\r\n    }\r\n\r\n    //add comparison calculations to stats to emphasize impacts of COVID\r\n    //add increments or decreasing numbers on dashboard\r\n    //add button enabling dark mode\r\n    //separate stats by components\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(allCountries).then(item => {\r\n            console.log(item);\r\n\r\n            this.setState({\r\n                countries: item.data,\r\n                chartOptions: {\r\n                    series: [{\r\n                        // name: item.data.Countries[0].TotalConfirmed,\r\n                        name: 'cases',\r\n                        data: [\r\n                            {\r\n                            name: 'New Confirmed',\r\n                            y: item.data.Global.NewConfirmed\r\n                        }, {\r\n                            name: 'Total Confirmed',\r\n                            y: item.data.Global.TotalConfirmed\r\n                        },\r\n                        {\r\n                            name: 'New Deaths',\r\n                            y: item.data.Global.NewDeaths\r\n                        },\r\n                        {\r\n                            name: 'Total Deaths',\r\n                            y: item.data.Global.TotalDeaths\r\n                        },\r\n                        {\r\n                            name: 'New Recovered',\r\n                            y: item.data.Global.NewRecovered\r\n                        },\r\n                        {\r\n                            name: 'Total Recovered',\r\n                            y: item.data.Global.TotalRecovered\r\n                        }\r\n                    ]\r\n                    }]\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n      \r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n\r\n\r\n    }\r\n\r\n    setCountry = (event) => {\r\n        console.log(event.target.country.value)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        document.title = \"User Data Dashboard\"\r\n        return (\r\n            <section>\r\n                <Header username='jason'/>\r\n\r\n                <h2>data dashboard</h2>\r\n\r\n                <form action=\"\">\r\n                    <label htmlFor=\"\"> Select your country to view cases </label>\r\n                    <select name=\"countries\" id=\"countries\">\r\n\r\n                        {this.state.countries.Countries && this.state.countries.Countries.map(country => {\r\n                            return <option\r\n                                key={country.ID}\r\n                                name='country'\r\n                                value={country.Country}\r\n                                onChange={this.setCountry}>\r\n                                {country.Country}\r\n                            </option>\r\n                        })}\r\n\r\n                    </select>\r\n                </form>\r\n\r\n                <div className=\"test\">\r\n                    <HighchartsReact\r\n                        highcharts={Highcharts}\r\n                        options={this.state.chartOptions} />\r\n                </div>\r\n\r\n\r\n                <p>data updated as of {new Date(this.state.countries.Date).toDateString()}</p>\r\n\r\n                <div>\r\n                    <h2>your country here</h2>\r\n                    <h2>Infection rate {null}</h2>\r\n                    <h2>Recovered</h2>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <h2>World Total Cases</h2>\r\n                    {/* <p>{(JSON.stringify(this.state.countries.Global.TotalConfirmed)/7,800,000,000)*100}</p> */}\r\n                    <p>{(780 / 7800) * 100}</p>\r\n                    <p>confirmed cases</p>\r\n                    <p>source: <a href=\"https://yaleglobal.yale.edu/content/world-population-2020-overview\">Yale University</a>\r\n                    </p>\r\n                </div>\r\n\r\n                <div>\r\n                    {/* sort method in array? style with most red, then decrease redness by 10% */}\r\n                    <h2>Top #1 country with most confirmed cases</h2>\r\n                    <h2>Top #2...</h2>\r\n                </div>\r\n\r\n                <div>\r\n                    <h2>Province details</h2>\r\n                    <p>province 1</p>\r\n                    <p>confirmed cases, recovered, deaths</p>\r\n                    <p>province 2 etc.</p>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":7,"column":35,"nodeType":"52","messageId":"53","endLine":7,"endColumn":39},{"ruleId":"50","severity":1,"message":"55","line":4,"column":22,"nodeType":"52","messageId":"53","endLine":4,"endColumn":27},{"ruleId":"50","severity":1,"message":"56","line":13,"column":5,"nodeType":"52","messageId":"53","endLine":13,"endColumn":11},{"ruleId":"57","severity":1,"message":"58","line":25,"column":44,"nodeType":"59","messageId":"60","endLine":25,"endColumn":45,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":218,"column":58,"nodeType":"64","messageId":"65","endLine":218,"endColumn":59},{"ruleId":"50","severity":1,"message":"66","line":232,"column":17,"nodeType":"52","messageId":"53","endLine":232,"endColumn":23},{"ruleId":"50","severity":1,"message":"54","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"55","line":3,"column":22,"nodeType":"52","messageId":"53","endLine":3,"endColumn":27},{"ruleId":"50","severity":1,"message":"56","line":11,"column":5,"nodeType":"52","messageId":"53","endLine":11,"endColumn":11},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'chart' is defined but never used.","'canada' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["69","70"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'popped' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"71","fix":"72","desc":"73"},{"messageId":"74","fix":"75","desc":"76"},"removeEscape",{"range":"77","text":"78"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"79","text":"80"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[941,942],"",[941,941],"\\"]